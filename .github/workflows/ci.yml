name: CI

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  test:
    name: Tests on ${{ matrix.device }} ${{ matrix.os }}
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - platform: iOS Simulator
            device: iPhone 16 Pro
            os: "18.6"
          - platform: macOS
            device: Mac
            os: "15.6"

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v5

      - name: Set up Xcode
        uses: maxim-lobanov/setup-xcode@v1
        with:
          xcode-version: latest-stable

      - name: Set Project Scheme
        run: echo "scheme=$(basename ${{ github.repository }})" >> $GITHUB_ENV

      - name: Set up Ruby
        uses: ruby/setup-ruby@v1
        with:
          bundler-cache: true

      - name: Install Project Gems
        run: bundle install

      - name: Run Tests with Code Coverage
        run: |
          set -o pipefail && \
          xcodebuild \
            -scheme "${{ env.scheme }}" \
            -destination "${{ matrix.platform == 'macOS' && 'platform=macOS,arch=x86_64' || format('platform={0},name={1},OS={2}', matrix.platform, matrix.device, matrix.os) }}" \
            -enableCodeCoverage YES \
            -derivedDataPath ./DerivedData \
            -resultBundlePath ./TestResults.xcresult \
            test

      - name: Install xcresultparser
        run: brew install xcresultparser

      - name: Generate Coverage Report (Slather)
        run: |
          bundle exec slather coverage \
            --scheme "${{ env.scheme }}" \
            --output-directory ./coverage \
            --cobertura-xml \
            --build-directory ./DerivedData \
            "./${{ env.scheme }}.xcodeproj"

      - name: Convert Test Results to JUnit
        run: |
          xcresultparser \
            --output-format junit \
            ./TestResults.xcresult > ./test-results.xml

      - name: Upload Code Coverage to Codecov
        uses: codecov/codecov-action@v5
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}
          files: ./coverage/cobertura.xml

      - name: Upload Test Results to Codecov
        if: ${{ !cancelled() }}
        uses: codecov/test-results-action@v1
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          slug: ${{ github.repository }}
          files: ./test-results.xml
